// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Data;

#nullable disable

namespace Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Server.Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShoppingCartId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("Server.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 1,
                            Url = "https://images.unsplash.com/photo-1541807084-5c52b6b3adef?auto=format&fit=crop&w=1000&q=60"
                        },
                        new
                        {
                            Id = 2,
                            ProductId = 2,
                            Url = "https://images.unsplash.com/photo-1556656793-08538906a9f8?auto=format&fit=crop&w=1000&q=60"
                        },
                        new
                        {
                            Id = 3,
                            ProductId = 3,
                            Url = "https://www.energysistem.com/cdnassets/products/45305/principal_2000.jpg"
                        },
                        new
                        {
                            Id = 4,
                            ProductId = 4,
                            Url = "https://images.unsplash.com/photo-1508685096489-7aacd43bd3b1?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8U21hcnQlMjB3YXRjaHxlbnwwfHwwfHx8MA%3D%3D&auto=format&fit=crop&w=400&q=60"
                        },
                        new
                        {
                            Id = 5,
                            ProductId = 5,
                            Url = "https://images.unsplash.com/photo-1552168324-d612d77725e3?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8Y2FtZXJhfGVufDB8fDB8fHww&auto=format&fit=crop&w=400&q=60"
                        },
                        new
                        {
                            Id = 6,
                            ProductId = 6,
                            Url = "https://images.unsplash.com/photo-1588196749597-9ff075ee6b5b?auto=format&fit=crop&w=1000&q=60"
                        },
                        new
                        {
                            Id = 7,
                            ProductId = 7,
                            Url = "https://images.unsplash.com/photo-1593642533144-3d62aa4783ec?auto=format&fit=crop&w=1000&q=60"
                        },
                        new
                        {
                            Id = 8,
                            ProductId = 8,
                            Url = "https://images.unsplash.com/photo-1561112078-7d24e04c3407?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTd8fGtleWJvYXJkfGVufDB8fDB8fHww&auto=format&fit=crop&w=400&q=60"
                        },
                        new
                        {
                            Id = 9,
                            ProductId = 9,
                            Url = "https://images.unsplash.com/photo-1563297007-0686b7003af7?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MjN8fG1vdXNlfGVufDB8fDB8fHww&auto=format&fit=crop&w=400&q=60"
                        },
                        new
                        {
                            Id = 10,
                            ProductId = 10,
                            Url = "https://images.unsplash.com/photo-1518364538800-6bae3c2ea0f2?auto=format&fit=crop&w=1000&q=60"
                        },
                        new
                        {
                            Id = 11,
                            ProductId = 11,
                            Url = "https://images.unsplash.com/photo-1580910051074-3eb694886505?auto=format&fit=crop&w=1000&q=60"
                        },
                        new
                        {
                            Id = 12,
                            ProductId = 12,
                            Url = "https://images.unsplash.com/photo-1545454675-3531b543be5d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8M3x8U3BlYWtlcnN8ZW58MHx8MHx8fDA%3D&auto=format&fit=crop&w=400&q=60"
                        },
                        new
                        {
                            Id = 13,
                            ProductId = 13,
                            Url = "https://images.unsplash.com/photo-1542744173-05336fcc7ad4?auto=format&fit=crop&w=1000&q=60"
                        },
                        new
                        {
                            Id = 14,
                            ProductId = 14,
                            Url = "https://images.unsplash.com/photo-1580493783887-8c874c534e93?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTh8fG1pY3xlbnwwfHwwfHx8MA%3D%3D&auto=format&fit=crop&w=400&q=60"
                        },
                        new
                        {
                            Id = 15,
                            ProductId = 15,
                            Url = "https://images.unsplash.com/photo-1618324068162-431429ed0df2?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=774&q=80"
                        },
                        new
                        {
                            Id = 16,
                            ProductId = 16,
                            Url = "https://images.unsplash.com/photo-1623949556303-b0d17d198863?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1470&q=80"
                        },
                        new
                        {
                            Id = 17,
                            ProductId = 17,
                            Url = "https://images.unsplash.com/photo-1573399054516-90665ecc44be?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1375&q=80"
                        },
                        new
                        {
                            Id = 18,
                            ProductId = 18,
                            Url = "https://images.unsplash.com/photo-1531390658120-e06b58d826ea?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTJ8fFBsYXlzdGF0aW9ufGVufDB8fDB8fHww&auto=format&fit=crop&w=400&q=60"
                        },
                        new
                        {
                            Id = 19,
                            ProductId = 19,
                            Url = "https://images.unsplash.com/photo-1612455130176-00d76a2f613f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1364&q=80"
                        },
                        new
                        {
                            Id = 20,
                            ProductId = 20,
                            Url = "https://images.unsplash.com/photo-1514499007249-cd680c1d1060?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1470&q=80"
                        });
                });

            modelBuilder.Entity("Server.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Server.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OrderItemId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("OrderItemId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("Server.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Powerful gaming laptop",
                            Name = "Laptop",
                            Price = 1200.50m
                        },
                        new
                        {
                            Id = 2,
                            Description = "Latest smartphone model",
                            Name = "Smartphone",
                            Price = 850.99m
                        },
                        new
                        {
                            Id = 3,
                            Description = "Wireless headphones",
                            Name = "Headphones",
                            Price = 200.00m
                        },
                        new
                        {
                            Id = 4,
                            Description = "Stylish smart watch",
                            Name = "Smart Watch",
                            Price = 250.00m
                        },
                        new
                        {
                            Id = 5,
                            Description = "DSLR camera",
                            Name = "Camera",
                            Price = 1500.00m
                        },
                        new
                        {
                            Id = 6,
                            Description = "High resolution computer monitor",
                            Name = "Monitor",
                            Price = 300.00m
                        },
                        new
                        {
                            Id = 7,
                            Description = "Fast multi-core processor",
                            Name = "Processor",
                            Price = 400.00m
                        },
                        new
                        {
                            Id = 8,
                            Description = "Ergonomic backlit keyboard",
                            Name = "Keyboard",
                            Price = 120.00m
                        },
                        new
                        {
                            Id = 9,
                            Description = "Wireless optical mouse",
                            Name = "Mouse",
                            Price = 60.00m
                        },
                        new
                        {
                            Id = 10,
                            Description = "All-in-one printer with WiFi",
                            Name = "Printer",
                            Price = 220.00m
                        },
                        new
                        {
                            Id = 11,
                            Description = "High-speed router with VPN support",
                            Name = "Router",
                            Price = 140.00m
                        },
                        new
                        {
                            Id = 12,
                            Description = "Bluetooth speakers with deep bass",
                            Name = "Speakers",
                            Price = 180.00m
                        },
                        new
                        {
                            Id = 13,
                            Description = "High resolution 10-inch tablet",
                            Name = "Tablet",
                            Price = 400.00m
                        },
                        new
                        {
                            Id = 14,
                            Description = "Studio-quality microphone",
                            Name = "Microphone",
                            Price = 250.00m
                        },
                        new
                        {
                            Id = 15,
                            Description = "64GB USB 3.0 Flash Drive",
                            Name = "USB Stick",
                            Price = 30.00m
                        },
                        new
                        {
                            Id = 16,
                            Description = "1080p Full HD Webcam",
                            Name = "Webcam",
                            Price = 80.00m
                        },
                        new
                        {
                            Id = 17,
                            Description = "4K Smart TV",
                            Name = "TV",
                            Price = 1000.00m
                        },
                        new
                        {
                            Id = 18,
                            Description = "Next-generation gaming console",
                            Name = "Game Console",
                            Price = 500.00m
                        },
                        new
                        {
                            Id = 19,
                            Description = "Camera drone with 4K recording",
                            Name = "Drone",
                            Price = 800.00m
                        },
                        new
                        {
                            Id = 20,
                            Description = "Immersive VR headset with controllers",
                            Name = "Virtual Reality Headset",
                            Price = 600.00m
                        });
                });

            modelBuilder.Entity("ShoppingCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("Server.Models.CartItem", b =>
                {
                    b.HasOne("Server.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShoppingCart", "ShoppingCart")
                        .WithMany("CartItems")
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("Server.Models.Image", b =>
                {
                    b.HasOne("Server.Models.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Server.Models.OrderItem", b =>
                {
                    b.HasOne("Server.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server.Models.OrderItem", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderItemId");

                    b.HasOne("Server.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Server.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("Server.Models.OrderItem", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("Server.Models.Product", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("ShoppingCart", b =>
                {
                    b.Navigation("CartItems");
                });
#pragma warning restore 612, 618
        }
    }
}
